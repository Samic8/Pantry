# Code
x (A) Save every X seconds automatically
x (A) Add headers / Make sticky
x (A) Make max on hand settings open whening creating a new item
x (A) Add new create experience with shifting position to test it out
x    - Seperate new item from items data set
x (A) Shift new row inputs
x (A) Add validation for initial estimation run out date
(C) Prevent shifting content when clicking setting button
(C) onbeforeunload if scheduled save has not happened
(D) Remove focus on restock button once clicked (to avoid focus state)
(D) Use html.lazy +improvements
(D) Split time estimate amount and unit on frontend +improvements

# Bugs
- When estimate on hand and max on hand is 0 the row dies
x - Filter bar can't be moved unless in restock
- Handle errors with message to user

# Design
x (A) Add way of specifying if restock ran out or is top up
(A) Empty screen experience. Help easy customers in (maybe show them what a full pantry would look like) +empty
(A) Loading state +empty
(A) Error screen experience
(A) Explain that estimates happen over time to the user +empty
(B) Experience of creating a new pantry
(C) Create Favicon
(C) Center title with list container

# Road-map Ideas
- Use affiliation marketing to generate collection of low items and add them to a shopping cart online
- Use web hooks to allow real time collaboration (e.g one user updates the other uses see the updates)
- Show estimated days in 'weeks' when goes past 7 days
- Undo restocks that happened today
- Use typescript on the node backend
- Write unit tests for backend
- Improve estimates e.g could be calculated in shorted period other then days (e.g hours)